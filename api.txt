const express = require('express');
const fs = require('fs');
const app = express();
app.use(express.json());
const nfts = JSON.parse(fs.readFileSync(`${__dirname}/data/nft-simple.json`));
console.log(nfts);
app.get('/api/v1/nfts', (req, res) => {

    res.status(200).json({
        status:"success",
        result:nfts.length,
        data: {
            nfts:nfts,
        },
    });
 
});
app.post('/api/v1/nfts', (req, res) => {
   // console.log(req.body);
   const newId =nfts.length > 0 ? nfts[nfts.length - 1].id + 1 : 1;
   const newNFt =Object.assign({id:newId},req.body);
   nfts.push(newNFt);
   fs.writeFile(`${__dirname}/data/nft-simple.json`, JSON.stringify(nfts),err =>{
    res.status(201).json({
        status:"success",
        nft:newNFt,
    } );
   });
 //   res.status(201).send("Posted ");
}
);
app.get("/api/v1/nfts/:id", (req, res) => {
    const id = parseInt(req.params.id, 10); // Convert ID to a number

    // Log the ID being searched


    // Find the NFT with the specified ID
    const nft = nfts.find((el) => el.id === id); // Use `===` for comparison

    // Check if the NFT is found
    if (!nft) {
        return res.status(404).json({
            status: "error",
            message: "NFT not found",
        });
    }

    // If the NFT is found, send a success response
    res.status(200).json({
        status: "success",
        data: {
            nft,
        },
    });
});
app.patch("/api/v1/nfts/:id", (req, res) => {
    if(req.params.id *1> nfts.length){
        return res.status(404).json({
            status: "error",
            message: "NFT not found",
        });
    }
    res.status(200).json({
        status: "success",
        message: "NFT updated successfully",
        data: {
            nft: "Updated successfully"
        }
    });

});
app.delete("/api/v1/nfts/:id", (req, res) => {
    if(req.params.id *1> nfts.length){
        return res.status(404).json({
            status: "error",
            message: "NFT not found",
        });
    }
    res.status(404).json({
        status: "success",
        message: "NFT updated successfully",
        data: null,
    });

});

const port =3002;
app.listen(port,() => {
    console.log(`Server running at http://localhost:${port}`);
});